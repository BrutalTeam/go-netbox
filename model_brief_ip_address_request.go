/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0.11 (4.0)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// checks if the BriefIPAddressRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BriefIPAddressRequest{}

// BriefIPAddressRequest Adds support for custom fields and tags.
type BriefIPAddressRequest struct {
	Address              *string `json:"address,omitempty"`
	Description          *string `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BriefIPAddressRequest BriefIPAddressRequest

// NewBriefIPAddressRequest instantiates a new BriefIPAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBriefIPAddressRequest() *BriefIPAddressRequest {
	this := BriefIPAddressRequest{}
	return &this
}

// NewBriefIPAddressRequestWithDefaults instantiates a new BriefIPAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBriefIPAddressRequestWithDefaults() *BriefIPAddressRequest {
	this := BriefIPAddressRequest{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *BriefIPAddressRequest) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BriefIPAddressRequest) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *BriefIPAddressRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *BriefIPAddressRequest) SetAddress(v string) {
	o.Address = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BriefIPAddressRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BriefIPAddressRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BriefIPAddressRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BriefIPAddressRequest) SetDescription(v string) {
	o.Description = &v
}

func (o BriefIPAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BriefIPAddressRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BriefIPAddressRequest) UnmarshalJSON(data []byte) (err error) {
	varBriefIPAddressRequest := _BriefIPAddressRequest{}

	err = json.Unmarshal(data, &varBriefIPAddressRequest)

	if err != nil {
		return err
	}

	*o = BriefIPAddressRequest(varBriefIPAddressRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBriefIPAddressRequest struct {
	value *BriefIPAddressRequest
	isSet bool
}

func (v NullableBriefIPAddressRequest) Get() *BriefIPAddressRequest {
	return v.value
}

func (v *NullableBriefIPAddressRequest) Set(val *BriefIPAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBriefIPAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBriefIPAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBriefIPAddressRequest(val *BriefIPAddressRequest) *NullableBriefIPAddressRequest {
	return &NullableBriefIPAddressRequest{value: val, isSet: true}
}

func (v NullableBriefIPAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBriefIPAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
